type teacher {
  id: ID
  name: String
  bio: String
  avatar_url: String
}

type subscriber {
  id: ID
  name: String
  email: String
}

type challenge {
  id: ID
  url: String
}

enum ENUM_LESSON {
  LIVE
  RECORD
}

type lesson {
  id: ID
  title: String
  slug: String
  description: String
  video_id: String
  lesson_type: ENUM_LESSON
  available_at: String
  challenge: challenge
  teacher: teacher
}

input SubscriberInput {
  name: String
  email: String
}

input TeacherInput {
  name: String
  bio: String
  avatar_url: String
}

input LessonInput {
  title: String
  slug: String
  description: String
  video_id: String
  lesson_type: ENUM_LESSON
  available_at: String
  challenge_id: ID
  teacher_id: ID
}

type Query {
  listTeacher: [teacher]
  findTeacher(id: ID!): teacher
  listLesson: [lesson]
  findLesson(id: ID!): lesson
  findLessonBySlug(slug: String!): lesson
}

type Mutation {
  createTeacher(teacher: TeacherInput): teacher
  createSubscriber(subscriber: SubscriberInput): subscriber
  createLesson(lesson: LessonInput): lesson
}
